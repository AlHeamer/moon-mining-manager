files:
  "/etc/supervisor/app.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      [program:laravel-queue-worker]
      process_name=%(program_name)s_%(process_num)02d
      command = php /var/app/current/artisan queue:work
      autostart=true
      autorestart=true
      user=webapp
      numprocs=2
      redirect_stderr=true
      stdout_logfile=/var/log/queue-worker.log
  "/etc/init.d/supervisord":
    mode: "000760"
    owner: root
    group: root
    content: |
      #!/bin/bash
      #
      # supervisord   Startup script for the Supervisor process control system
      #
      # Author:       Mike McGrath <mmcgrath@redhat.com> (based off yumupdatesd)
      #               Jason Koppe <jkoppe@indeed.com> adjusted to read sysconfig,
      #                   use supervisord tools to start/stop, conditionally wait
      #                   for child processes to shutdown, and startup later
      #               Erwan Queffelec <erwan.queffelec@gmail.com>
      #                   make script LSB-compliant
      #
      # chkconfig:    345 83 04
      # description: Supervisor is a client/server system that allows \
      #   its users to monitor and control a number of processes on \
      #   UNIX-like operating systems.
      # processname: supervisord
      # config: /etc/supervisord.conf
      # config: /etc/sysconfig/supervisord
      # pidfile: /var/run/supervisord.pid
      #
      ### BEGIN INIT INFO
      # Provides: supervisord
      # Required-Start: $all
      # Required-Stop: $all
      # Short-Description: start and stop Supervisor process control system
      # Description: Supervisor is a client/server system that allows
      #   its users to monitor and control a number of processes on
      #   UNIX-like operating systems.
      ### END INIT INFO

      # Source function library
      . /etc/rc.d/init.d/functions
      # source environment
      . /opt/elasticbeanstalk/support/envvars

      # Source system settings
      if [ -f /etc/sysconfig/supervisord ]; then
          . /etc/sysconfig/supervisord
      fi

      # Path to the supervisorctl script, server binary,
      # and short-form for messages.
      supervisorctl=/usr/local/bin/supervisorctl
      supervisord=${SUPERVISORD-/usr/local/bin/supervisord}
      prog=supervisord
      pidfile=${PIDFILE-/tmp/supervisord.pid}
      lockfile=${LOCKFILE-/var/lock/subsys/supervisord}
      STOP_TIMEOUT=${STOP_TIMEOUT-60}
      OPTIONS="${OPTIONS--c /etc/supervisord.conf}"
      RETVAL=0

      start() {
          echo -n $"Starting $prog: "
          daemon --pidfile=${pidfile} $supervisord $OPTIONS
          RETVAL=$?
          echo
          if [ $RETVAL -eq 0 ]; then
              touch ${lockfile}
              $supervisorctl $OPTIONS status
          fi
          return $RETVAL
      }

      stop() {
          echo -n $"Stopping $prog: "
          killproc -p ${pidfile} -d ${STOP_TIMEOUT} $supervisord
          RETVAL=$?
          echo
          [ $RETVAL -eq 0 ] && rm -rf ${lockfile} ${pidfile}
      }

      reload() {
          echo -n $"Reloading $prog: "
          LSB=1 killproc -p $pidfile $supervisord -HUP
          RETVAL=$?
          echo
          if [ $RETVAL -eq 7 ]; then
              failure $"$prog reload"
          else
              $supervisorctl $OPTIONS status
          fi
      }

      restart() {
          stop
          start
      }

      case "$1" in
          start)
              start
              ;;
          stop)
              stop
              ;;
          status)
              status -p ${pidfile} $supervisord
              RETVAL=$?
              [ $RETVAL -eq 0 ] && $supervisorctl $OPTIONS status
              ;;
          restart)
              restart
              ;;
          condrestart|try-restart)
              if status -p ${pidfile} $supervisord >&/dev/null; then
                stop
                start
              fi
              ;;
          force-reload|reload)
              reload
              ;;
          *)
              echo $"Usage: $prog {start|stop|restart|condrestart|try-restart|force-reload|reload}"
              RETVAL=2
          esac

          exit $RETVAL

  "/etc/supervisord.conf":
    mode: "000640"
    owner: root
    group: root
    content: |
      ; Sample supervisor config file.
      ;
      ; For more information on the config file, please see:
      ; http://supervisord.org/configuration.html
      ;
      ; Notes:
      ;  - Shell expansion ("~" or "$HOME") is not supported.  Environment
      ;    variables can be expanded using this syntax: "%(ENV_HOME)s".
      ;  - Quotes around values are not supported, except in the case of
      ;    the environment= options as shown below.
      ;  - Comments must have a leading space: "a=b ;comment" not "a=b;comment".
      ;  - Command will be truncated if it looks like a config file comment, e.g.
      ;    "command=bash -c 'foo ; bar'" will truncate to "command=bash -c 'foo ".

      [unix_http_server]
      file=/tmp/supervisor.sock   ; the path to the socket file
      ;chmod=0700                 ; socket file mode (default 0700)
      ;chown=nobody:nogroup       ; socket file uid:gid owner
      ;username=user              ; default is no username (open server)
      ;password=123               ; default is no password (open server)

      ;[inet_http_server]         ; inet (TCP) server disabled by default
      ;port=127.0.0.1:9001        ; ip_address:port specifier, *:port for all iface
      ;username=user              ; default is no username (open server)
      ;password=123               ; default is no password (open server)

      [supervisord]
      logfile=/tmp/supervisord.log ; main log file; default $CWD/supervisord.log
      logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
      logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
      loglevel=info                ; log level; default info; others: debug,warn,trace
      pidfile=/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid
      nodaemon=false               ; start in foreground if true; default false
      minfds=1024                  ; min. avail startup file descriptors; default 1024
      minprocs=200                 ; min. avail process descriptors;default 200
      ;umask=022                   ; process file creation umask; default 022
      ;user=chrism                 ; default is current user, required if root
      ;identifier=supervisor       ; supervisord identifier, default is 'supervisor'
      ;directory=/tmp              ; default is not to cd during start
      ;nocleanup=true              ; don't clean up tempfiles at start; default false
      ;childlogdir=/tmp            ; 'AUTO' child log dir, default $TEMP
      ;environment=KEY="value"     ; key value pairs to add to environment
      ;strip_ansi=false            ; strip ansi escape codes in logs; def. false

      ; The rpcinterface:supervisor section must remain in the config file for
      ; RPC (supervisorctl/web interface) to work.  Additional interfaces may be
      ; added by defining them in separate [rpcinterface:x] sections.

      [rpcinterface:supervisor]
      supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

      ; The supervisorctl section configures how supervisorctl will connect to
      ; supervisord.  configure it match the settings in either the unix_http_server
      ; or inet_http_server section.

      [supervisorctl]
      serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
      ;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
      ;username=chris              ; should be same as in [*_http_server] if set
      ;password=123                ; should be same as in [*_http_server] if set
      ;prompt=mysupervisor         ; cmd line prompt (default "supervisor")
      ;history_file=~/.sc_history  ; use readline history if available

      [include]
      files = supervisor/*.conf

  "/var/log/supervisord/created":
    mode: "000774"
    owner: root
    group: root
    content: |
      # Empty file for creating folder

container_commands:
  00_install_supervisor:
    command: "sudo pip install supervisor"
  10_run_supervisor:
    command: "sudo service supervisord restart"
  20_enable_config:
    command: "sudo /usr/local/bin/supervisorctl reread"
  30_update_supervisor:
    command: "sudo /usr/local/bin/supervisorctl update"
  40_start_workers:
    command: "sudo /usr/local/bin/supervisorctl restart all"
